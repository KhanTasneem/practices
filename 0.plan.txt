Day 1 – Warmup & Brute Force Mindset

Problems:

✅ Merge Sorted Array (88) → you already saw this.

✅ Remove Duplicates from Sorted Array (26).

Focus:

Write brute force solutions first (use sort, extra array, etc.).

Then check editorial → learn in-place trick.

Goal: Get comfortable starting with any working solution.

Day 2 – Two-Pointer Basics

Problems:

✅ Two Sum II – Input array is sorted (167).

✅ Move Zeroes (283).

Focus:

Learn how two pointers move (left + right).

Practice comparing and shifting.

Goal: Understand why two-pointer is better than nested loops.

Day 3 – More Two-Pointer

Problems:

✅ Squares of a Sorted Array (977).

✅ Reverse String (344).

Focus:

Hands-on with “two sides moving toward middle”.

Goal: See that two-pointer = smart way of iterating.

Day 4 – Sliding Window (Fixed Size)

Problems:

✅ Maximum Average Subarray I (643).

✅ Subarray Sum of Size K (practice example).

Focus:

Instead of recalculating sum each time, slide the window.

Goal: Understand efficiency gain.

Day 5 – Sliding Window (Variable Size)

Problems:

✅ Longest Substring Without Repeating Characters (3).

✅ Minimum Size Subarray Sum (209).

Focus:

Window grows/shrinks based on condition.

Goal: First exposure to “expand + shrink” pattern.